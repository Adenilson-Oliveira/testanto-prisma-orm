generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// models com relação de um pra um (one to one)
model Courses {
  id            String   @id @default(uuid())
  name          String   @unique
  description   String?
  duration      Int
  created_at    DateTime @default(now())
  teacher       Teachers @relation(fields: [fk_id_teacher], references: [id])
  fk_id_teacher String   @unique

  @@map("courses")
}

model Teachers {
  id     String   @id @default(uuid())
  name   String   @unique
  course Courses?

  @@map("teachers")
}

// Models com relação de um pra muitos (one to many)
model Authors {
  id    String  @id @default(uuid())
  name  String  @unique
  books Books[]

  @@map("authors")
}

model Books {
  id           String  @id @default(uuid())
  name         String  @unique
  fk_id_author String
  authors      Authors @relation(fields: [fk_id_author], references: [id])

  @@map("books")
}

// ===============> Models com relação de muitos pra muitos (many to many)
model Estudantes {
  id         String       @id @default(uuid())
  nome       String
  sobrenome  String
  matriculas Matriculas[]

  @@map("estudantes")
}

model Aulas {
  id          String       @id @default(uuid())
  titulo      String
  description String
  matriculas  Matriculas[]

  @@map("aulas")
}

// tabela de associação
model Matriculas {
  id              String     @id @default(uuid())
  fk_id_estudante String
  estudante       Estudantes @relation(fields: [fk_id_estudante], references: [id])
  fk_id_aula      String
  aula            Aulas      @relation(fields: [fk_id_aula], references: [id])
  created_at      DateTime   @default(now())

  @@map("matriculas")
}

model Rifas {
  id      String  @id @default(uuid())
  num     Int
  vendido Boolean

  @@map("rifas")
}
